<?xml version="1.0"?>
  <!--
    (c) Copyright 2012 WibiData, Inc.

    See the NOTICE file distributed with this work for additional
    information regarding copyright ownership.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
  -->
<FindBugsFilter>

  <!--
    Bugs we don't care about globally.
  -->
  <Match>
    <Or>
      <!-- We never use Java Serialization, so ignore any Serializable findbugs warnings. -->
      <Bug pattern="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE" />
      <Bug pattern="EI_EXPOSE_REP" />
      <Bug pattern="EI_EXPOSE_REP2" />
    </Or>
  </Match>
  <Match>
    <!-- Bugs in auto-generated Avro sources -->
    <Class name="~org[.]kiji[.]schema[.]avro[.].*" />
  </Match>

  <!--
    Other one-off exclusions.
  -->
  <Match>
    <!-- I really do want to return the same array every time, for performance. -->
    <Class name="org.kiji.schema.KijiColumnName" />
    <Or>
      <Method name="getFamilyBytes" />
      <Method name="getQualifierBytes" />
    </Or>
    <Bug pattern="EI_EXPOSE_REP" />
  </Match>
  <Match>
    <!-- I really do want to return the same array every time, for performance. -->
    <Class name="org.kiji.schema.HBaseColumnName" />
    <Or>
      <Bug pattern="EI_EXPOSE_REP" />
      <Bug pattern="EI_EXPOSE_REP2" />
    </Or>
  </Match>
  <Match>
    <!-- For performance, code returning the same array every time is correct. -->
    <Class name="org.kiji.schema.mapreduce.KijiTableSplit" />
    <Or>
      <Bug pattern="EI_EXPOSE_REP" />
      <Bug pattern="EI_EXPOSE_REP2" />
      <Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS" />
    </Or>
  </Match>
  <Match>
    <!--
       InMemoryTableKeyValueDatabase.getValue() distinguishes between null (missing table)
       and a zero-length byte array value for a given key.
    -->
    <Class name="org.kiji.schema.impl.InMemoryTableKeyValueDatabase" />
    <Bug pattern="PZLA_PREFER_ZERO_LENGTH_ARRAYS" />
  </Match>

  <!-- Do not conflate null and the empty byte array: -->
  <Match>
    <Or>
      <Class name="~org[.]kiji[.]schema[.]impl[.]HashedEntityId" />
      <Class name="~org[.]kiji[.]schema[.]impl[.]HashPrefixedEntityId" />
      <!-- null indicates a missing cell and is different from a cell with no bytes -->
      <Class name="~org[.]kiji[.]schema[.]impl[.]HBaseKijiRowData" />
    </Or>
    <Bug pattern="PZLA_PREFER_ZERO_LENGTH_ARRAYS" />
  </Match>

  <Match>
    <!-- This is used to create an immutable array -->
    <Class name="org.kiji.schema.impl.HBaseKiji" />
    <Bug pattern="ITA_INEFFICIENT_TO_ARRAY" />
  </Match>
  <Match>
    <!-- mTableURI is initialized through flags with FlagParser.parse() -->
    <Class name="org.kiji.schema.tools.SynthesizeUserDataTool" />
    <Bug pattern="UWF_NULL_FIELD" />
  </Match>

  <Match>
    <!-- These fields get populated by the flag parser. -->
    <Class name="org.kiji.schema.tools.LayoutTool" />
    <Or>
      <Bug pattern="UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR" />
      <Bug pattern="UWF_NULL_FIELD" />
    </Or>
  </Match>

  <Match>
    <!-- These fields get populated by the flag parser. -->
    <Class name="org.kiji.schema.tools.DeleteTool" />
    <Bug pattern="UWF_NULL_FIELD" />
  </Match>
</FindBugsFilter>
